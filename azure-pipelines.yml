trigger:
  batch: true
  branches:
    include:
    - master
    - staging
    - trying

jobs:
- job: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      Julia 1.1:
        JULIA_VERSION: '1.1'

  steps:
  - bash: |
      set -o xtrace
      wget -nv https://julialang-s3.julialang.org/bin/linux/x64/$(JULIA_VERSION)/julia-$(JULIA_VERSION)-latest-linux-x86_64.tar.gz
      mkdir julia-$(JULIA_VERSION)
      tar zxf julia-$(JULIA_VERSION)-latest-linux-x86_64.tar.gz -C julia-$(JULIA_VERSION) --strip-components 1
    displayName: 'Download and extract Julia'
  - bash: |
      set -o xtrace
      sudo apt-get update
      sudo apt-get install cmake gfortran mpich libmpich-dev
    displayName: 'Install dependencies'
  - bash: |
      set -o xtrace
      ./julia-$(JULIA_VERSION)/bin/julia -e 'using InteractiveUtils; versioninfo()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.instantiate()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.test()'
    displayName: 'Run the tests'
  - bash: |
      set -o xtrace
      export TRAVIS_REPO_SLUG="$BUILD_REPOSITORY_NAME"
      export TRAVIS_PULL_REQUEST="${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-false}"
      if [[ $BUILD_SOURCEBRANCH == /refs/tags/* ]]; then
        export TRAVIS_TAG="${BUILD_SOURCEBRANCH:11}"
      fi
      if [[ $BUILD_SOURCEBRANCH == /refs/heads/* ]]; then
        export TRAVIS_BRANCH="${BUILD_SOURCEBRANCH:12}"
      fi
      ./julia-$(JULIA_VERSION)/bin/julia --project=docs/ -e 'using Pkg; Pkg.instantiate();
                                                                        Pkg.develop(PackageSpec(path=pwd()));
                                                                        Pkg.build()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=docs/ docs/make.jl
    env:
      DOCUMENTER_KEY: $(documenter_key)
    displayName: 'Deploy the docs'

- job: macOS

  pool:
    vmImage: 'macOS-10.14'

  strategy:
    matrix:
      Julia 1.1:
        JULIA_VERSION: '1.1'

  steps:
  - bash: |
      set -o xtrace
      wget -nv https://julialang-s3.julialang.org/bin/mac/x64/$(JULIA_VERSION)/julia-$(JULIA_VERSION)-latest-mac64.dmg
      mkdir juliamnt
      hdiutil mount -readonly -mountpoint juliamnt julia-$(JULIA_VERSION)-latest-mac64.dmg
      cp -a juliamnt/*.app/Contents/Resources/julia julia-$(JULIA_VERSION)
    displayName: 'Download and extract Julia'
  - bash: |
      set -o xtrace
      brew update
      brew upgrade
      brew install mpich cmake
    displayName: 'Install dependencies'
  - bash: |
      set -o xtrace
      ./julia-$(JULIA_VERSION)/bin/julia -e 'using InteractiveUtils; versioninfo()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.instantiate()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.test()'
    displayName: 'Run the tests'


- job: Windows

  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    matrix:
      Julia 1.1:
        JULIA_VERSION: '1.1'

  steps:
  - powershell: |
      Set-PSDebug -Trace 1
      wget https://julialang-s3.julialang.org/bin/winnt/x64/$(JULIA_VERSION)/julia-$(JULIA_VERSION)-latest-win64.exe -OutFile julia-$(JULIA_VERSION)-latest-win64.exe
      Start-Process -FilePath .\julia-$(JULIA_VERSION)-latest-win64.exe -ArgumentList "/S /D=C:\julia-$(JULIA_VERSION)" -NoNewWindow -Wait
    displayName: 'Download and extract Julia'
  - powershell: |
      Set-PSDebug -Trace 1
      wget https://download.microsoft.com/download/2/E/C/2EC96D7F-687B-4613-80F6-E10F670A2D97/msmpisetup.exe -OutFile MSMpiSetup.exe
      Start-Process -FilePath .\MSMpiSetup.exe "-unattend -minimal"
    displayName: 'Install dependencies'
  - powershell: |
      Set-PSDebug -Trace 1
      C:\julia-$(JULIA_VERSION)\bin\julia.exe -e 'using InteractiveUtils; versioninfo()'
      C:\julia-$(JULIA_VERSION)\bin\julia.exe --project=@. -e 'using Pkg; Pkg.instantiate()'
      C:\julia-$(JULIA_VERSION)\bin\julia.exe --project=@. -e 'using Pkg; Pkg.test()'
    displayName: 'Run the tests'

- job: Documentation

  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      Julia 1.1:
        JULIA_VERSION: '1.1'

  steps:
  - bash: |
      set -o xtrace
      wget -nv https://julialang-s3.julialang.org/bin/linux/x64/$(JULIA_VERSION)/julia-$(JULIA_VERSION)-latest-linux-x86_64.tar.gz
      mkdir julia-$(JULIA_VERSION)
      tar zxf julia-$(JULIA_VERSION)-latest-linux-x86_64.tar.gz -C julia-$(JULIA_VERSION) --strip-components 1
    displayName: 'Download and extract Julia'
  - bash: |
      set -o xtrace
      sudo apt-get update
      sudo apt-get install cmake gfortran mpich libmpich-dev
    displayName: 'Install dependencies'
  - bash: |
      set -o xtrace
      export TRAVIS_REPO_SLUG="$BUILD_REPOSITORY_NAME"
      export TRAVIS_PULL_REQUEST="${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-false}"
      if [[ $BUILD_SOURCEBRANCH == refs/tags/* ]]; then
        export TRAVIS_TAG="${BUILD_SOURCEBRANCH:10}"
      fi
      if [[ $BUILD_SOURCEBRANCH == refs/heads/* ]]; then
        export TRAVIS_BRANCH="${BUILD_SOURCEBRANCH:11}"
      fi
      ./julia-$(JULIA_VERSION)/bin/julia -e 'using InteractiveUtils; versioninfo()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=docs/ -e 'using Pkg; Pkg.instantiate();
                                                                        Pkg.develop(PackageSpec(path=pwd()));
                                                                        Pkg.build()'
      ./julia-$(JULIA_VERSION)/bin/julia --project=docs/ docs/make.jl
    env:
      DOCUMENTER_KEY: $(documenter_key)
    displayName: 'Build and deploy docs'
